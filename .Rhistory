knitr::opts_chunk$set(echo = TRUE,
dev = 'tikz')
library(tikzDevice)
plot(runif(20))
###################
## THIS WORKS!!! ##
###################
options(tikzLatexPackages = c(getOption("tikzLatexPackages"),
c("\\renewcommand{\\familydefault}{\\sfdefault}")))
###################
## see above     ##
###################
library(ggplot2)
ggplot(mpg, aes(x=factor(cyl), y=hwy, fill=factor(cyl)))+
geom_violin(scale = "width")
install.packages(c("servr", "knitr"), repos = "http://cran.rstudio.com")
install.packages(c("knitr", "servr", "devtools"))
install.packages(c("knitr", "servr", "devtools"))
devtools::install_github("hadley/lubridate")
x<c(2,7,5)
x=<c(2,7,5)
x=c(2,7,5)
x
y=seq(from=4, length=3, by=3)
y
?seq
library (MASS )
library (ISLR )
library (ISLR)
install.packages("ISLR")
library (ISLR)
fix ( Boston )
names ( Boston )
?Boston
lm.fit =lm(medv∼lstat )
lm.fit =lm(medv∼lstat , data= Boston )
View(Boston)
lm.fit
summary (lm.fit )
names (lm.fit )
coef(lm.fit )
lm.fit$coefficients
confint (lm.fit )
predict (lm.fit , data. frame ( lstat =(c(5 ,10 ,15) )),
interval =" confidence ")
predict (lm.fit , data. frame ( lstat =(c(5 ,10 ,15) )), interval =" confidence ")
predict (lm.fit, data.frame(lstat=(c(5 ,10 ,15) )), interval =" confidence ")
predict (lm.fit, data.frame(lstat=(c(5 ,10 ,15) )), interval ="confidence")
plot(lstat ,medv )
plot(lstat,medv)
attach(Boston)
plot(lstat,medv)
abline (lm.fit )
abline (lm.fit ,lwd =3)
abline (lm.fit ,lwd =3, col =" red ")
plot(lstat ,medv ,col =" red ")
plot(lstat ,medv ,pch =20)
plot(lstat ,medv ,pch ="+")
plot (1:20 ,1:20 , pch =1:20)
par ( mfrow =c(2 ,2) )
plot(lm.fit )
plot( predict (lm.fit ), residuals (lm.fit ))
plot( predict (lm.fit ), rstudent (lm.fit ))
plot( hatvalues (lm.fit ))
which .max ( hatvalues (lm.fit ))
which.max ( hatvalues (lm.fit ))
lm.fit =lm(medv∼lstat +age ,data= Boston )
summary (lm.fit )
lm.fit =lm(medv∼.,data = Boston )
summary (lm.fit )
?summary.lm
install.packages(car)
library (car )
install.packages(car)
install.packages('car')
vif (lm.fit )
vif(lm.fit)
library (car)
vif(lm.fit)
lm. fit2=lm(medv∼lstat +I( lstat ^2) )
lm.fit2=lm(medv∼lstat +I( lstat ^2) )
summary (lm.fit2 )
lm.fit =lm(medv∼lstat )
anova (lm.fit ,lm.fit2)
lm. fit5=lm(medv∼poly(lstat ,5) )
lm.fit5=lm(medv∼poly(lstat ,5) )
summary(lm.fit5)
fix ( Carseats )
names ( Carseats )
lm.fit =lm(Sales∼.+ Income : Advertising +Price :Age , data= Carseats )
summary (lm.fit )
attach ( Carseats )
contrasts ( ShelveLoc )
?contrasts
shinyApp(ui = ui, server = server) # this launches your app
shinyApp(ui = ui, server = server) # this launches your app
install.packages(shiny)"shiny"
install.packages(shiny)
install.packages("shiny")
shinyApp(ui = ui, server = server) # this launches your app
shinyApp(ui = ui, server = server) # this launches your app
source('~/.active-rstudio-document')
shinyApp(ui = ui, server = server) # this launches your app
ui <- basicPage("This is a real Shiny app") # the user interface
ui <- basicPage("This is a real Shiny app") # the user interface
shinyApp(ui = ui, server = server) # this launches your app
#### server
server <- function(input, output, session) {
}
#### user interface
ui <- fluidPage(
titlePanel("App with simple layout"),
sidebarLayout(
sidebarPanel(
"Sidebar"
), #endsidebarpanel
mainPanel(
"This is the main panel"
)#end mainpanel
)# end sidebarlayout
)
shinyApp(ui = ui, server = server)
server <- function(input, output, session) {
}
ui <- basicPage(
h1("Title without tags$"),
tags$blockquote("But block quote requires tags$ because it is less common than h3, h1 or code"),
h3("H3 is fine without tags and so is code here"),
code("data.frame(a=1:10, b=1:10)")
)
shinyApp(ui = ui, server = server)
library(rmarkdown)
library(threejs)
devtools::install_github("yihui/xaringan")
install_github("yihui/xaringan")
library(threejs)
install.packages('threejs')
library(threejs)
x <- sort(rnorm(10))
y <- rnorm(10)
z <- rnorm(10) + atan2(x,y)
scatterplot3js(x, y, z,  color=rainbow(10), renderer="canvas")
install.packages('knitr')
library(threejs)
x <- sort(rnorm(10))
y <- rnorm(10)
z <- rnorm(10) + atan2(x,y)
scatterplot3js(x, y, z,  color=rainbow(10), renderer="canvas")
install.packages('xaringan')
devtools::install_github("yihui/xaringan")
install.packages('devtools')
devtools::install_github("yihui/xaringan")
install.packages('tibble')
install.packages('tojson')
devtools::install_github("tojson")
devtools::install_github("yihui/tojson")
update.packages(ask = FALSE, checkBuilt = TRUE)
update.packages(ask = FALSE, checkBuilt = TRUE)
update.packages(ask = FALSE, checkBuilt = TRUE)
install.packages('survival', dependencies = TRUE)
setwd("D:/GitHub/blogdown")
blogdown:::serve_site()
blogdown:::update_meta_addin()
